# Generated by Django 4.2.9 on 2024-12-06 20:11

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='Название инструмента')),
                ('quote_currency', models.CharField(max_length=10, verbose_name='Валюта котировки')),
                ('lot', models.FloatField(verbose_name='Минимальный размер лота')),
                ('tick_size', models.FloatField(verbose_name='Минимальное изменения цены')),
                ('taker_commission', models.FloatField(null=True, verbose_name='Коммиссия текера')),
                ('maker_commission', models.FloatField(null=True, verbose_name='Коммиссия мекера')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.instrument')),
            ],
            options={
                'verbose_name': 'Связь инструмента и биржи',
                'verbose_name_plural': 'Связь инструмента и биржи',
                'db_table': 'api_instrument_platform',
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_spread', models.FloatField(verbose_name='Спред')),
                ('order_step', models.FloatField(verbose_name='Шаг сетки')),
                ('start_step', models.FloatField(verbose_name='Шаг первой позиции')),
                ('order_size', models.FloatField(verbose_name='Размер ордера')),
                ('grid_depth', models.FloatField(verbose_name='Максимальная допустимая глубина')),
                ('grid_side', models.FloatField(verbose_name='Направление открытия сделки')),
                ('instrument_platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.instrumentplatform', verbose_name='Связки платформы и инструмента')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Боты',
                'verbose_name_plural': 'Боты',
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название биржи')),
                ('url', models.CharField(max_length=200, null=True, verbose_name='Адрес')),
                ('trade_session_start', models.TimeField(default=datetime.time(0, 0), verbose_name='Начало торговой сессии')),
                ('trade_session_stop', models.TimeField(default=datetime.time(23, 59), verbose_name='Окончание торговой сессии')),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('size_orig', models.FloatField()),
                ('size', models.FloatField()),
                ('side', models.CharField(max_length=10)),
                ('fee', models.FloatField()),
                ('trade_id', models.IntegerField()),
                ('timestamp', models.IntegerField()),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.manager')),
            ],
            options={
                'verbose_name': 'Сделки',
                'verbose_name_plural': 'Сделки',
            },
        ),
        migrations.AddField(
            model_name='instrumentplatform',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.platform'),
        ),
    ]
